{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Blockchain Quick Start"
  },
  "tags": [
    {
      "name": "Channel",
      "description": "Channel operations on blockchain network"
    },
    {
      "name": "Chaincode",
      "description": "Chaincode deployments on blockchain network"
    },
    {
      "name": "Invoke",
      "description": "Invoke on blockchain network"
    },
    {
      "name": "Query",
      "description": "Query on blockchain network"
    }
  ],
  "schemes": [
    "http"
  ],
  "paths": {
    "/channel/create": {
      "post": {
        "tags": [
          "Channel"
        ],
        "summary": "create an channel",
        "description": "",
        "operationId": "createChannel",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "create an channel with name 'mychannel'",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateChannel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateChannelS"
            }
          },
          "500": {
            "description": "Failed",
            "schema": {
              "$ref": "#/definitions/CreateChannelF"
            }
          }
        }
      }
    },
    "/channel/join": {
      "post": {
        "tags": [
          "Channel"
        ],
        "summary": "join peers to the channel",
        "description": "",
        "operationId": "joinChannel",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "join all of the peers to channel",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JoinChannel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/JoinChannelS"
            }
          },
          "500": {
            "description": "Failed",
            "schema": {
              "$ref": "#/definitions/JoinChannelF"
            }
          }
        }
      }
    },
    "/chaincode/install": {
      "post": {
        "tags": [
          "Chaincode"
        ],
        "summary": "install chaincode to the peers",
        "description": "",
        "operationId": "installChaincode",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "install chaincode to the peers",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InstallChaincode"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/InstallChaincodeS"
            }
          },
          "500": {
            "description": "Failed",
            "schema": {
              "$ref": "#/definitions/InstallChaincodeF"
            }
          }
        }
      }
    },
    "/chaincode/instantiate": {
      "post": {
        "tags": [
          "Chaincode"
        ],
        "summary": "instantiate the chaincode",
        "description": "",
        "operationId": "instantiateChaincode",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "instantiate the chaincode",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InstantiateChaincode"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/InstantiateChaincodeS"
            }
          },
          "500": {
            "description": "Failed",
            "schema": {
              "$ref": "#/definitions/InstantiateChaincodeF"
            }
          }
        }
      }
    },
    "/invoke/{channelName}/{chaincodeName}": {
      "post": {
        "tags": [
          "Invoke"
        ],
        "summary": "invoke chaincode",
        "description": "",
        "operationId": "invokeChaincode",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "channelName",
            "in": "path",
            "description": "channel name to invoke (mychannel)",
            "required": true,
            "type": "string"
          },
          {
            "name": "chaincodeName",
            "in": "path",
            "description": "chaincode name to invoke (mycc)",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "invoke details",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Invoke"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/InvokeS"
            }
          },
          "500": {
            "description": "Failed",
            "schema": {
              "$ref": "#/definitions/InvokeF"
            }
          }
        }
      }
    },
    "/query/{channelName}/{chaincodeName}": {
      "post": {
        "tags": [
          "Query"
        ],
        "summary": "query chaincode",
        "description": "",
        "operationId": "queryChaincode",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "channelName",
            "in": "path",
            "description": "channel name to query (mychannel)",
            "required": true,
            "type": "string"
          },
          {
            "name": "chaincodeName",
            "in": "path",
            "description": "chaincode name to query (mycc)",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "query details",
            "required": true,
            "schema": {
              "$ref": "#/definitions/QueryBalance"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/QueryBalanceResponseS"
            }
          },
          "500": {
            "description": "Failed",
            "schema": {
              "$ref": "#/definitions/QueryBalanceResponseF"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "CreateChannel": {
      "type": "object",
      "required": [
        "channelName",
        "includeOrgNames",
        "ordererName",
        "orgName"
      ],
      "properties": {
        "channelName": {
          "type": "string",
          "example": "mychannel"
        },
        "includeOrgNames": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "example": [
            "Org1",
            "Org2"
          ]
        },
        "ordererName": {
          "type": "string",
          "example": "orderer.example.com"
        },
        "orgName": {
          "type": "string",
          "example": "Org1"
        }
      }
    },
    "CreateChannelS": {
      "type": "object",
      "properties": {
        "result": {
          "type": "string",
          "example": "success"
        }
      }
    },
    "CreateChannelF": {
      "type": "object",
      "properties": {
        "result": {
          "type": "string",
          "example": "failed"
        },
        "error": {
          "type": "string",
          "example": "Failed to create the channel mychannel"
        }
      }
    },
    "JoinChannel": {
      "type": "object",
      "required": [
        "channelName",
        "ordererName",
        "orgName",
        "peers"
      ],
      "properties": {
        "channelName": {
          "type": "string",
          "example": "mychannel"
        },
        "ordererName": {
          "type": "string",
          "example": "orderer.example.com"
        },
        "orgName": {
          "type": "string",
          "example": "Org1"
        },
        "peers": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "example": [
            "peer0.org1.example.com",
            "peer1.org1.example.com"
          ]
        }
      }
    },
    "JoinChannelS": {
      "type": "object",
      "properties": {
        "result": {
          "type": "string",
          "example": "success"
        }
      }
    },
    "JoinChannelF": {
      "type": "object",
      "properties": {
        "result": {
          "type": "string",
          "example": "failed"
        },
        "error": {
          "type": "string",
          "example": "Failed to join the channel mychannel"
        }
      }
    },
    "InstallChaincode": {
      "type": "object",
      "required": [
        "chaincode",
        "chaincodeName",
        "chaincodeType",
        "chaincodeVersion",
        "orgName",
        "peers"
      ],
      "properties": {
        "chaincode": {
          "type": "string",
          "description": "Chaincode file encoded with base64",
          "example": "cGFja2FnZSBtYWluCgppbXBvcnQgKAoJImZtdCIKCgkiZ2l0aHViLmNvbS9oeXBlcmxlZGdlci9mYWJyaWMvY29yZS9jaGFpbmNvZGUvc2hpbSIKCXBiICJnaXRodWIuY29tL2h5cGVybGVkZ2VyL2ZhYnJpYy9wcm90b3MvcGVlciIKKQoKLy8gVHJhbnNmZXJDaGFpbmNvZGUgRGVmaW5lIGNoYWluY29kZQp0eXBlIFRyYW5zZmVyQ2hhaW5jb2RlIHN0cnVjdCB7Cn0KCi8vIEVudHJ5IG9mIGNoYWluY29kZQpmdW5jIG1haW4oKSB7CgllcnIgOj0gc2hpbS5TdGFydChuZXcoVHJhbnNmZXJDaGFpbmNvZGUpKQoJaWYgZXJyICE9IG5pbCB7CgkJZm10LlByaW50ZigiRXJyb3Igc3RhcnRpbmcgdHJhbnNmZXIgY2hhaW5jb2RlOiAlcyIsIGVycikKCX0KfQoKLy9Jbml0IEluaXRpYWxpemUgY2hhaW5jb2RlCmZ1bmMgKHQgKlRyYW5zZmVyQ2hhaW5jb2RlKSBJbml0KHN0dWIgc2hpbS5DaGFpbmNvZGVTdHViSW50ZXJmYWNlKSBwYi5SZXNwb25zZSB7CgoJcmV0dXJuIHNoaW0uU3VjY2VzcyhuaWwpCn0KCi8vIEludm9rZSBpbnZva2UgY2hhaW5jb2RlCmZ1bmMgKHQgKlRyYW5zZmVyQ2hhaW5jb2RlKSBJbnZva2Uoc3R1YiBzaGltLkNoYWluY29kZVN0dWJJbnRlcmZhY2UpIHBiLlJlc3BvbnNlIHsKCWZ1bmN0aW9uLCBhcmdzIDo9IHN0dWIuR2V0RnVuY3Rpb25BbmRQYXJhbWV0ZXJzKCkKCWlmIGZ1bmN0aW9uID09ICJwdXQiIHsKCQlyZXR1cm4gdC5hZGRNb25leShzdHViLCBhcmdzKQoJfSBlbHNlIGlmIGZ1bmN0aW9uID09ICJnZXQiIHsKCQlyZXR1cm4gdC5xdWVyeU1vbmV5KHN0dWIsIGFyZ3MpCgl9CglyZXR1cm4gc2hpbS5FcnJvcigiVW5zdXBwb3J0ZWQgb3BlcmF0aW9uLiBQbGVhc2UgdXNlIGFkZCB0cmFuc2ZlciBxdWVyeSBkZWxldGUiKQp9CgpmdW5jICh0ICpUcmFuc2ZlckNoYWluY29kZSkgYWRkTW9uZXkoc3R1YiBzaGltLkNoYWluY29kZVN0dWJJbnRlcmZhY2UsIGFyZ3MgW11zdHJpbmcpIHBiLlJlc3BvbnNlIHsKCWlmIGxlbihhcmdzKSAhPSAyIHsKCQlyZXR1cm4gc2hpbS5FcnJvcigiTm90IGVub3VnaCBhcmd1bWVudHMsIE5lZWQgMjogdXNlcixtb25leSIpCgl9Cgl1c2VybmFtZSA6PSBhcmdzWzBdCgl2YWx1ZSA6PSBbXWJ5dGUoYXJnc1sxXSkKCXZhciBlcnIgZXJyb3IKCWVyciA9IHN0dWIuUHV0U3RhdGUodXNlcm5hbWUsIHZhbHVlKQoJaWYgZXJyICE9IG5pbCB7CgkJcmV0dXJuIHNoaW0uRXJyb3IoZXJyLkVycm9yKCkpCgl9CglyZXR1cm4gc2hpbS5TdWNjZXNzKHZhbHVlKQoKfQoKZnVuYyAodCAqVHJhbnNmZXJDaGFpbmNvZGUpIHF1ZXJ5TW9uZXkoc3R1YiBzaGltLkNoYWluY29kZVN0dWJJbnRlcmZhY2UsIGFyZ3MgW11zdHJpbmcpIHBiLlJlc3BvbnNlIHsKCWlmIGxlbihhcmdzKSAhPSAxIHsKCQlyZXR1cm4gc2hpbS5FcnJvcigiTm90IGVub3VnaCBhcmd1bWVudHMsIE5lZWQgMTogVXNlcm5hbWUiKQoJfQoJbW9uZXlBc0J5dGVzLCBlcnIgOj0gc3R1Yi5HZXRTdGF0ZShhcmdzWzBdKQoJaWYgZXJyICE9IG5pbCB8fCBtb25leUFzQnl0ZXMgPT0gbmlsIHsKCQlyZXR1cm4gc2hpbS5FcnJvcihlcnIuRXJyb3IoKSkKCX0KCglpZiBlcnIgIT0gbmlsIHsKCQlyZXR1cm4gc2hpbS5FcnJvcihlcnIuRXJyb3IoKSkKCX0KCXJldHVybiBzaGltLlN1Y2Nlc3MobW9uZXlBc0J5dGVzKQp9Cg=="
        },
        "chaincodeName": {
          "type": "string",
          "example": "mycc"
        },
        "chaincodeType": {
          "type": "string",
          "example": "golang"
        },
        "chaincodeVersion": {
          "type": "string",
          "example": "v1.0"
        },
        "orgName": {
          "type": "string",
          "example": "Org1"
        },
        "peers": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "example": [
            "peer0.org1.example.com",
            "peer1.org1.example.com"
          ]
        }
      }
    },
    "InstallChaincodeS": {
      "type": "object",
      "properties": {
        "result": {
          "type": "string",
          "example": "success"
        }
      }
    },
    "InstallChaincodeF": {
      "type": "object",
      "properties": {
        "result": {
          "type": "string",
          "example": "failed"
        },
        "error": {
          "type": "string",
          "example": "Failed to install the chaincode"
        }
      }
    },
    "InstantiateChaincode": {
      "type": "object",
      "required": [
        "chaincodeName",
        "chaincodeType",
        "chaincodeVersion",
        "channelName",
        "functionName",
        "args",
        "ordererName",
        "orgName",
        "peers"
      ],
      "properties": {
        "chaincodeName": {
          "type": "string",
          "example": "mycc"
        },
        "chaincodeType": {
          "type": "string",
          "example": "golang"
        },
        "chaincodeVersion": {
          "type": "string",
          "example": "v1.0"
        },
        "channelName": {
          "type": "string",
          "example": "mychannel"
        },
        "functionName": {
          "type": "string",
          "example": ""
        },
        "args": {
          "type": "string",
          "example": []
        },
        "ordererName": {
          "type": "string",
          "example": "orderer.example.com"
        },
        "orgName": {
          "type": "string",
          "example": "Org1"
        },
        "peers": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "example": [
            "peer0.org1.example.com",
            "peer1.org1.example.com",
            "peer0.org2.example.com",
            "peer1.org2.example.com"
          ]
        }
      }
    },
    "InstantiateChaincodeS": {
      "type": "object",
      "properties": {
        "result": {
          "type": "string",
          "example": "success"
        }
      }
    },
    "InstantiateChaincodeF": {
      "type": "object",
      "properties": {
        "result": {
          "type": "string",
          "example": "failed"
        },
        "error": {
          "type": "string",
          "example": "Failed to instantiate the chaincode"
        }
      }
    },
    "Invoke": {
      "type": "object",
      "required": [
        "functionName",
        "args",
        "ordererName",
        "orgName",
        "peers"
      ],
      "properties": {
        "functionName": {
          "type": "string",
          "example": "put"
        },
        "args": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "example": [
            "user",
            "1"
          ]
        },
        "ordererName": {
          "type": "string",
          "example": "orderer.example.com"
        },
        "orgName": {
          "type": "string",
          "example": "Org1"
        },
        "peers": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "example": [
            "peer0.org1.example.com",
            "peer1.org1.example.com",
            "peer0.org2.example.com",
            "peer1.org2.example.com"
          ]
        }
      }
    },
    "InvokeS": {
      "type": "object",
      "properties": {
        "tx_id": {
          "type": "string",
          "example": "0c4590348b9f4378468d18f9de53118a396083a02ca68add267a1c816a23acb6"
        }
      }
    },
    "InvokeF": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string",
          "example": "Failed to invoke chaincode. cause:invoke chaincode proposal was bad"
        }
      }
    },
    "QueryBalance": {
      "type": "object",
      "required": [
        "functionName",
        "args",
        "ordererName",
        "orgName",
        "peers"
      ],
      "properties": {
        "functionName": {
          "type": "string",
          "example": "get"
        },
        "args": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "example": [
            "user"
          ]
        },
        "ordererName": {
          "type": "string",
          "example": "orderer.example.com"
        },
        "orgName": {
          "type": "string",
          "example": "Org1"
        },
        "peers": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "example": [
            "peer0.org1.example.com",
            "peer1.org1.example.com",
            "peer0.org2.example.com",
            "peer1.org2.example.com"
          ]
        }
      }
    },
    "QueryBalanceResponseS": {
      "type": "object",
      "properties": {
        "result": {
          "type": "number",
          "example": 5
        }
      }
    },
    "QueryBalanceResponseF": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string",
          "example": "Error: Incorrect number of arguments"
        }
      }
    }
  }
}
