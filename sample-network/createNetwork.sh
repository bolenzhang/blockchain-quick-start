#!/bin/bash

#set -x
CHANNEL_NAME="mychannel"
IMAGETAG="1.2.0"

# Generates Org certs using cryptogen tool
function generateCerts (){
  echo
  echo "##########################################################"
  echo "##### Generate certificates using cryptogen tool #########"
  echo "##########################################################"
  if [ -d "./crypto-config" ]; then
    rm -Rf ./crypto-config
  fi
  ./bin/cryptogen generate --config=./crypto-config.yaml --output=./crypto-config
  if [ "$?" -ne 0 ]; then
    echo "Failed to generate certificates..."
    exit 1
  fi
  echo
}

# Using docker-compose-e2e-template.yaml, replace constants with private key file names
# generated by the cryptogen tool and output a docker-compose.yaml specific to this
# configuration
function replacePrivateKey () {
  # Copy the template to the file that will be modified to add the private key
  cp docker-compose-e2e-template.yaml docker-compose-e2e.yaml

  # The next steps will replace the template's contents with the
  # actual values of the private key file names for the two CAs.
  CURRENT_DIR=$PWD
  cd crypto-config/peerOrganizations/org1.example.com/ca/
  PRIV_KEY=$(ls *_sk)
  cd "$CURRENT_DIR"
  sed -i "s/CA1_PRIVATE_KEY/${PRIV_KEY}/g" docker-compose-e2e.yaml
  cd crypto-config/peerOrganizations/org2.example.com/ca/
  PRIV_KEY=$(ls *_sk)
  cd "$CURRENT_DIR"
  sed -i "s/CA2_PRIVATE_KEY/${PRIV_KEY}/g" docker-compose-e2e.yaml
  # If MacOSX, remove the temporary backup of the docker-compose file

  cp ../config/network-config-template.yaml ../config/network-config.yaml
  cd crypto-config/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp/keystore/
  PRIV_KEY=$(ls *_sk)
  cd "$CURRENT_DIR"
  sed -i "s/ORG1_PRIVATE_KEY/${PRIV_KEY}/g" ../config/network-config.yaml
  cd crypto-config/peerOrganizations/org2.example.com/users/Admin@org2.example.com/msp/keystore/
  PRIV_KEY=$(ls *_sk)
  cd "$CURRENT_DIR"
  sed -i "s/ORG2_PRIVATE_KEY/${PRIV_KEY}/g" ../config/network-config.yaml

  cp ../config/network-config-ext-template.yaml ../config/network-config-ext.yaml
}

# Generate orderer genesis block, channel configuration transaction and
# anchor peer update transactions
function generateChannelArtifacts() {
  if [ -d "./channel-artifacts" ]; then
    rm -Rf ./channel-artifacts
  fi
  mkdir -p ./channel-artifacts
  echo "##########################################################"
  echo "#########  Generating Orderer Genesis block ##############"
  echo "##########################################################"
  # Note: For some unknown reason (at least for now) the block file can't be
  # named orderer.genesis.block or the orderer will fail to launch!
  set -x
  ./bin/configtxgen -profile TwoOrgsOrdererGenesis -outputBlock ./channel-artifacts/genesis.block
  res=$?
  set +x
  if [ $res -ne 0 ]; then
    echo "Failed to generate orderer genesis block..."
    exit 1
  fi
  echo
  echo "#################################################################"
  echo "### Generating channel configuration transaction 'channel.tx' ###"
  echo "#################################################################"
  set -x
  ./bin/configtxgen -profile TwoOrgsChannel -outputCreateChannelTx ./channel-artifacts/channel.tx -channelID $CHANNEL_NAME
  res=$?
  set +x
  if [ $res -ne 0 ]; then
    echo "Failed to generate channel configuration transaction..."
    exit 1
  fi

  echo
  echo "#################################################################"
  echo "#######    Generating anchor peer update for Org1MSP   ##########"
  echo "#################################################################"
  set -x
  ./bin/configtxgen -profile TwoOrgsChannel -outputAnchorPeersUpdate ./channel-artifacts/Org1MSPanchors.tx -channelID $CHANNEL_NAME -asOrg Org1MSP
  res=$?
  set +x
  if [ $res -ne 0 ]; then
    echo "Failed to generate anchor peer update for Org1MSP..."
    exit 1
  fi

  echo
  echo "#################################################################"
  echo "#######    Generating anchor peer update for Org2MSP   ##########"
  echo "#################################################################"
  set -x
  ./bin/configtxgen -profile TwoOrgsChannel -outputAnchorPeersUpdate \
    ./channel-artifacts/Org2MSPanchors.tx -channelID $CHANNEL_NAME -asOrg Org2MSP
  res=$?
  set +x
  if [ $res -ne 0 ]; then
    echo "Failed to generate anchor peer update for Org2MSP..."
    exit 1
  fi
  echo
}

function prepareEnv() {
  # your running env is container or dev
  read -p "If you want run in container? (Y/n): " RUN_ENV
  if [[ $RUN_ENV = "N" || $RUN_ENV = "n" ]]; then
    # in dev mode, reset certs' path
    CURRENT_DIR=$PWD
    CURRENT_DIR=$(echo $CURRENT_DIR | sed -s "s/\//\\\\\//g")
    sed -i "s/\/var/$CURRENT_DIR/g" ../config/network-config.yaml
    sed -i "s/\/var/$CURRENT_DIR/g" ../config/network-config-ext.yaml

    # in dev mode, reset url
    sed -i "s/orderer.example.com:7050/localhost:7050/g" ../config/network-config.yaml
    sed -i "s/peer0.org1.example.com:7051/localhost:7051/g" ../config/network-config.yaml
    sed -i "s/peer0.org1.example.com:7053/localhost:7053/g" ../config/network-config.yaml
    sed -i "s/peer1.org1.example.com:7051/localhost:8051/g" ../config/network-config.yaml
    sed -i "s/peer1.org1.example.com:7053/localhost:8053/g" ../config/network-config.yaml
    sed -i "s/peer0.org2.example.com:7051/localhost:9051/g" ../config/network-config.yaml
    sed -i "s/peer0.org2.example.com:7053/localhost:9053/g" ../config/network-config.yaml
    sed -i "s/peer1.org2.example.com:7051/localhost:10051/g" ../config/network-config.yaml
    sed -i "s/peer1.org2.example.com:7053/localhost:10053/g" ../config/network-config.yaml
    sed -i "s/ca.org1.example.com:7054/localhost:7054/g" ../config/network-config.yaml
    sed -i "s/ca.org2.example.com:7054/localhost:8054/g" ../config/network-config.yaml
  fi

  IMAGE_TAG=$IMAGETAG docker-compose -f docker-compose-e2e.yaml up -d 2>&1
  if [ $? -ne 0 ]; then
    echo "ERROR !!!! Unable to start network"
    exit 1
  fi
}


generateCerts
replacePrivateKey
generateChannelArtifacts
prepareEnv

